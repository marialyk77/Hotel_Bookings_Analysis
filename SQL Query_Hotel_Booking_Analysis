CREATE TABLE [dbo].[FactHotelBookings](
	[TypeHotelID] [int] NULL,
	[ReservationStatusID] [int] NULL,
	[CustomerTypeID] [int] NULL,
	[DepositTypeID] [int] NULL,
	[Reserved_RoomTypeID] [int] NULL,
	Assigned_RoomTypeID int,
	[CountryID] [int] NULL,
	[Market_SegmentID] [int] NULL,
	Distribution_channel_id int, 
	[MealTypeID] [int] NULL,
	[arrival_date_year] [int] NULL,
	[arrival_date_month] varchar(50),
	arrival_date_day_of_month tinyint,
	[arrival_date_week_number] tinyint,
	[ReservationStatusDate] [datetime2](7) NULL,
	is_canceled bit,
	lead_time smallint,
	stays_in_weekend_nights tinyint,
	stays_in_week_nights tinyint,
	adults tinyint,
	children smallint,
	babies tinyint, 
	is_repeated_guest tinyint,
	previous_cancellations tinyint,
	previous_bookings_not_cancelled tinyint, 
	booking_changes tinyint, 
	agent smallint, 
	company smallint, 
	days_in_waiting_list smallint, 
	adr smallint, 
	required_car_parking_spaces tinyint, 
	total_of_special_requests tinyint

) ON [PRIMARY]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimCountryID] FOREIGN KEY([CountryID])
REFERENCES [dbo].[DimCountry] ([CountryID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimCountryID]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimCustomerType] FOREIGN KEY([CustomerTypeID])
REFERENCES [dbo].[DimCustomerType] ([CustomerTypeID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimCustomerType]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimDepositType] FOREIGN KEY([DepositTypeID])
REFERENCES [dbo].[DimDepositType] ([DepositTypeID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimDepositType]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimHotelType] FOREIGN KEY([TypeHotelID])
REFERENCES [dbo].[DimHotelType] ([HotelTypeID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimHotelType]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimMealType] FOREIGN KEY([MealTypeID])
REFERENCES [dbo].[DimMealType] ([MealTypeID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimMealType]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimReservationStatus] FOREIGN KEY([ReservationStatusID])
REFERENCES [dbo].[DimReservationStatus] ([ReservationStatusID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimReservationStatus]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimRoomType] FOREIGN KEY([RoomTypeID])
REFERENCES [dbo].[DimRoomType] ([RoomTypeID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimRoomType]
GO

ALTER TABLE [dbo].[FactHotelBookings]  WITH CHECK ADD  CONSTRAINT [FK_FactHotelBookings_DimSegment] FOREIGN KEY([SegmentID])
REFERENCES [dbo].[DimSegment] ([SegmentID])
GO

ALTER TABLE [dbo].[FactHotelBookings] CHECK CONSTRAINT [FK_FactHotelBookings_DimSegment]
GO


INSERT INTO DimSegment VALUES(0,'Unknown')

SELECT * 
INTO DimSegment2
FROM DimSegment
UNION
SELECT 0, 'Unknown'



SELECT * FROM DimHotelType

SELECT * 
INTO DimCountry2
FROM DimCountry
UNION
SELECT 0, 'Unknown'

SELECT * 
INTO DimCustomerType2
FROM DimCustomerType
UNION
SELECT 0, 'Unknown'

SELECT * 
INTO DimDepositType2
FROM DimDepositType
UNION
SELECT 0, 'Unknown'


SELECT * 
INTO DimHotelType2
FROM DimHotelType
UNION
SELECT 0, 'Unknown'



SELECT * 
INTO DimMealType2
FROM DimMealType
UNION
SELECT 0, 'Unknown'

SELECT * 
INTO DimReservationStatus2
FROM DimReservationStatus
UNION
SELECT 0, 'Unknown'

SELECT * 
INTO DimRoomType2
FROM DimRoomType
UNION
SELECT 0, 'Unknown'

SELECT * 
INTO DimSegment2
FROM DimSegment
UNION
SELECT 0, 'Unknown'



select HotelTypeID,ReservationStatusID,CustomerTypeID, DepositTypeID,
RTRes.Room_Type_ID as Reserved_roomtypeID,RTas.Room_Type_ID as Assigned_roomtypeID,CountryID,s_market.SegmentID as Market_SegmentID,
s_ds_chnl.SegmentID as Distribution_Chaneel_id,MealTypeID,
arrival_date_year,arrival_date_month,arrival_date_day_of_month,arrival_date_week_number,reservation_status_date,
is_canceled,lead_time,stays_in_weekend_nights,stays_in_week_nights,replace(adults, 'Null',0) as adults, replace(children, 'NA',0) as children,
replace(babies, 'Null', 0) as babies,is_repeated_guest,previous_cancellations,previous_bookings_not_canceled,
booking_changes, replace(agent, 'Null', 0) as agent, replace(company, 'Null', 0) AS company,days_in_waiting_list, replace(adr, 'Null', 0) as adr,
required_car_parking_spaces,total_of_special_requests 
into FactHotelBookings
from hotel_bookings as A
LEFT join DimHotelType as B on A.hotel = B.HoteltypeDescr
join DimReservationStatus as R on A.reservation_status = R.ReservationStatusDescr
left join DimCustomerType as C on A.customer_type = C.CustomerTypeDescr
LEFT join DimDepositType as D on A. deposit_type = D.DepositTypeDescr
left join DimRoomType as RTRes on A.reserved_room_type = RTRes.Type
left join DimRoomType as RTas on A.assigned_room_type = RTas.Type
join DimCountry as Cou on A.country = Cou.CountryDescr 
left join DimSegment s_market on A.market_segment = s_market.SegmentDescr
left join DimSegment s_ds_chnl on A.distribution_channel = s_ds_chnl. SegmentDescr
LEFT join DimMealType as Mea on A.meal = Mea.MealTypeDescr

---I HAVE TO RE-CREATE THE dim RESERVED ROOM Type:  
--- Creating the Dim Room Type ID , There was a problem because Both reserved and assigned room types had the same codes and in order to create the Dim Room Type ID 
---and to ensure that unique values are counted, The following code was used to correct for the dublicate values:

create table DimRoomType (
room_type_id smallint identity(1,1),
type varchar(10)
);
with t as (
select distinct reserved_room_type as room_type
from hotel_bookings
union
select distinct assigned_room_type
from hotel_bookings
)
insert into DimRoomType
select distinct room_type
from t


---ANSWERING QUESTIONS WITH SQL---

---Number of bookings

select count(reservation_status_date) as num_bookings
from hotel_bookings 

---Number of bookings by month


select arrival_date_month, 
count(ReservationStatusID) as count_bookings
from FactHotelBookings
group by arrival_date_month, arrival_date_year
order by count_bookings DESC 

---Number of booking per country of origin

select count(FactHotelBookings.CountryID) AS num_bookings, dbo.DimCountry.CountryDescr as country_name 
from FactHotelBookings 
Join dbo.DimCountry
on FactHotelBookings.CountryID = DimCountry.CountryID
Group by dbo.DimCountry.CountryDescr
order by num_bookings desc


---Number of bookings per hotel type

SELECT HoteltypeDescr, count(ReservationStatusID) as num_bookings_hoteltype
FROM FactHotelBookings
Join DimHotelType
ON FactHotelBookings.HotelTypeID = DimHotelType.HotelTypeID
GROUP BY HoteltypeDescr


---How many bookings have been canceled?--- Here 1 = is cancelled, 0 = not cancelled. Summing up the Collumn gives us the total cancelled. 

SELECT SUM(is_canceled) AS Num_Bookings_Canceled
FROM FactHotelBookings

--- What is the percent of cancelled: 

SELECT SUM(is_canceled) * 1.0 / Count(ReservationStatusID) * 100
FROM FactHotelBookings

---What is the average lead time?

SELECT AVG(lead_time) AS Avg_leadTime
FROM FactHotelBookings


--- What is the month with the most bookings?
--- We have first to find the num of reservations per month and then the top month. 

;WITH mx AS 
(SELECT arrival_date_month, COUNT(*) AS Month_Max_Bookings
FROM FactHotelBookings
GROUP BY arrival_date_month),
mx2 AS (
SELECT MAX(Month_Max_Bookings) AS Max_Month
FROM mx)
SELECT arrival_date_month 
FROM mx,mx2 --- here we do not need a join, we can take both tables like this---
WHERE Month_Max_Bookings = Max_Month


---What is the arrival date â€“ week number with the most arrivals?

WITH ad AS
(SELECT arrival_date, COUNT(*) AS Arrival_Date_MOST
FROM FactHotelBookings
GROUP BY arrival_date), 
adm AS (
SELECT MAX(Arrival_Date_MOST) AS Day_with_Most_Arrivals
from ad) 
SELECT arrival_date, DATEPART(ww, arrival_date) AS WEEK_THE_MOST
FROM ad, adm 
WHERE Arrival_Date_MOST = Day_with_Most_Arrivals

---What is the average stay on weekend nights?
SELECT AVG(stays_in_weekend_nights *1.0) 
FROM FactHotelBookings


---Find how many bookings per hotel type has more than 2 children

SELECT HotelTypeDescr, 
count(*) AS Bookings_More_Than_Two_chil
from FactHotelBookings
JOIN DimHotelType
ON FactHotelBookings.HotelTypeID = DimHotelType.HotelTypeID
WHERE children > 2
group by HotelTypeDescr

---Find the deposit type trend (whether the most bookings has or not deposit)
SELECT DepositTypeDescr, COUNT(*) AS trend
FROM FactHotelBookings f
join DimDepositType d ON f.DepositTypeID = d.DepositTypeID
GROUP BY DepositTypeDescr 
ORDER BY count(*) desc 

---Which agent has the most bookings?
SELECT agent, COUNT(*) AS AGEN_Most
FROM FactHotelBookings
GROUP BY agent
ORDER BY COUNT(*) desc 


---Which dates have the most demanding customers (more than 2) based on special requests? 

SELECT SUM(total_of_special_requests), arrival_date
FROM FactHotelBookings
WHERE total_of_special_requests > 2 
GROUP BY arrival_date

---What is the month with the most cancellations?
SELECT TOP 1 arrival_date_month, COUNT(*) 
from FactHotelBookings
WHERE is_canceled = 1 
GROUP BY arrival_date_month
ORDER BY COUNT(*) DESC


